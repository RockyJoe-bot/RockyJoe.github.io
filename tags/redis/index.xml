<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>redis on codex</title>
    <link>http://RockyJoee.github.io/tags/redis/</link>
    <description>Recent content in redis on codex</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>© {year}</copyright>
    <lastBuildDate>Thu, 20 Aug 2020 00:59:46 +0800</lastBuildDate>
    
	<atom:link href="http://RockyJoee.github.io/tags/redis/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Redis的事务</title>
      <link>http://RockyJoee.github.io/blog/redis/</link>
      <pubDate>Thu, 20 Aug 2020 00:59:46 +0800</pubDate>
      
      <guid>http://RockyJoee.github.io/blog/redis/</guid>
      <description>Redis事务： Redis单条命令是保持原子性的，但是事务不保证原子性,Redis事务没有隔离级别
Redis事务具有一次性，顺序性，排他性，此外Redis事务中所有命令会被序列化
 开启事务（multi）
命令入队
执行事务（exec）
分为编译时异常和运行时异常
若是编译时异常事务中所有命令都不会执行
若是运行时异常，执行命令时 错误命令抛异常，其他命令是可以正常执行的
取消事务（discard）</description>
    </item>
    
    <item>
      <title>Redis的数据类型（1）</title>
      <link>http://RockyJoee.github.io/blog/redis%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B1/</link>
      <pubDate>Thu, 20 Aug 2020 00:59:46 +0800</pubDate>
      
      <guid>http://RockyJoee.github.io/blog/redis%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B1/</guid>
      <description>Redis键以及数据类型：String, list, set,hash,Zset  Redis键（key）： keys * 查看所有的key
set 设置变量
exist key的名字 查询key是否存在
move key db 移除当前库的key eg: move name 1 移除数据库1中的key name
expire key 秒 给key设置生存时间，过期自动删除
ttl key 查看还有多少秒过期 -2表示已过期 -1表示永不过期
type key 查看key的类型
 String: set key value 设置值
get key 获取Key
del key 删除Key
append key &amp;quot;hello&amp;quot;  拼接字符串 (若不存在的Key进行append等同于set key &amp;ldquo;hello&amp;rdquo;)
strlen key 获取字符串长度
incrby(decrby) views 10 将储存的数字增长或减少10
范围range： getrange 获取指定范围内的值
setrange 设置指定范围的值
eg:getrange key 0 -1 获取全部的值</description>
    </item>
    
    <item>
      <title>Redis的数据类型（2）</title>
      <link>http://RockyJoee.github.io/blog/redis%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B2/</link>
      <pubDate>Fri, 14 Aug 2020 00:59:46 +0800</pubDate>
      
      <guid>http://RockyJoee.github.io/blog/redis%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B2/</guid>
      <description>Redis特殊数据类型：geospatial，Hyperloglog,Bitmap  GEO地理位置： 首先GEO是redis 3.2版本后推出的 之前使用geoadd命令报错因为redis版本号为3.0
geoadd 将给定的空间元素（经度纬度名字）添加到指定的键里
geoadd key longitude latitude member
geopos key member 从key里返回给定元素的元素位置
geodist
geodist key member1 member2 [unit]
返回两个给定位置之间的距离，如果两个位置之间的其中一个不存在,那么命令返回空值。
指定单位的参数unit必须是以下单位的其中一个： m表示单位为米
km表示单位为千米 mi表示单位为英里
ft表示单位为英尺
如果用户没有显式地指定单位参数,那么geodist默认使用米作为单位。
georadius 给定经纬度为中心，找出某一半径内的元素 georadiusbymember 用于城市定位 eg: georadiusbymember china:city shanghai 1000km 找出Key中以上海为中心1000km内的城市
geohash将二维经纬度转换成一维的字符串
GEO底层实现是用zset 可以用zset命令操作geo
zrem china:city shanghai
zrange china:city 0 -1 等
 Hyperloglog: pfadd添加元素
pfcount 统计key元素基数数量
pfmerge 合并两组Key
 Bitmap:  位存储 应用：打卡，未打卡；登录，未登录等两种状态可用Bitmaps储存
 setbit key offset value设置操作
getbit key offset 读取offset设置的值（未设置返回0）</description>
    </item>
    
  </channel>
</rss>